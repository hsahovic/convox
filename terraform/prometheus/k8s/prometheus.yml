global:
  scrape_interval: 10s
rule_files:
  - rules.yml
scrape_configs:
  - job_name: "cadvisor"
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
  - job_name: endpoints
    kubernetes_sd_configs:
      - role: endpoints
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
  - job_name: pods
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
  # - job_name: "kubelet"
  #   kubernetes_sd_configs:
  #     - role: node
  #   scheme: https
  #   tls_config:
  #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  #   relabel_configs:
  #     - action: labelmap
  #       regex: __meta_kubernetes_node_label_(.+)
  #     - target_label: __address__
  #       replacement: kubernetes.default.svc:443
  #     - source_labels: [__meta_kubernetes_node_name]
  #       regex: (.+)
  #       target_label: __metrics_path__
  #       replacement: /api/v1/nodes/$1/proxy/metrics
  # - job_name: "k8apiserver"
  #   kubernetes_sd_configs:
  #     - role: endpoints
  #   scheme: https
  #   tls_config:
  #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  #   relabel_configs:
  #     - source_labels:
  #         [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
  #       action: keep
  #       regex: default;kubernetes;https
  # - job_name: "k8services"
  #   kubernetes_sd_configs:
  #     - role: endpoints
  #   relabel_configs:
  #     - source_labels:
  #         - __meta_kubernetes_namespace
  #         - __meta_kubernetes_service_name
  #       action: drop
  #       regex: default;kubernetes
  #     - source_labels:
  #         - __meta_kubernetes_namespace
  #       regex: default
  #       action: keep
  #     - source_labels: [__meta_kubernetes_service_name]
  #       target_label: job
  # - job_name: "k8pods"
  #   kubernetes_sd_configs:
  #     - role: pod
  #   relabel_configs:
  #     - source_labels: [__meta_kubernetes_pod_container_port_name]
  #       regex: metrics
  #       action: keep
  #     - source_labels: [__meta_kubernetes_pod_container_name]
  #       target_label: job
  # - job_name: "kube-state-metrics"
  #   static_configs:
  #     - targets: ["kube-state-metrics.${namespace}.svc.cluster.local:8080"]
